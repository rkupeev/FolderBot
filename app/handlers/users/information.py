from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardRemove
from aiogram.fsm.context import FSMContext
from aiogram.types import Message

from sqlalchemy.ext.asyncio import AsyncSession
from sqlalchemy import select, func

from app.database.connection import connection
from app.database.models import Users
from app.keyboards.reply_keyboards import show_menu
from app.database.models import Entities, Users


information_router = Router()


#help command
@information_router.message(F.text == "‚ÑπÔ∏è –ü–æ–º–æ—â—å")
@information_router.message(Command("help"))
async def cmd_help(message: Message, state: FSMContext):
    await state.clear() 
    await message.answer(
        text=f'–í—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ Folder Botü§ñ! \n\n–î–∞–Ω–Ω—ã–π –±–æ—Ç –ø–æ–∑–≤–æ–ª–∏—Ç —Ö—Ä–∞–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –∑–∞–ø–∏—Å–∏ –Ω–µ–±–æ–ª—å—à–∏—Ö —Ä–∞–∑–º–µ—Ä–æ–≤ –≤ –æ—Ç–≤–µ–¥–µ–Ω–Ω–æ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ. \n\n–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –±–æ—Ç–∞:\n1. /menu - –≤—ã–∑–≤–∞—Ç—å –º–µ–Ω—é –∫–æ–º–∞–Ω–¥ \n2. /cancel - –æ—Ç–º–µ–Ω–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏ \n3. /profile - –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ—Ñ–∏–ª—å \n4. /add - –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å \n5. /storage - –æ—Ç–∫—Ä—ã—Ç—å –º–æ–∏ –∑–∞–ø–∏—Å–∏ \n6. /help - –ø–æ–ª—É—á–∏—Ç—å –∫–æ—Ä–æ—Ç–∫—É—é —Å–ø—Ä–∞–≤–∫—É\n\n–î–ª—è –æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç–≤–µ–¥–µ–Ω–æ –º–µ—Å—Ç–æ –ø–æ–¥ —Ö—Ä–∞–Ω–µ–Ω–∏–µ 20 –∑–∞–ø–∏—Å–µ–π.\n\nüí° <i>–î–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ–ø–∏—Å–∞–Ω–Ω—ã–µ –Ω–∞–º–∏ –∫–æ–º–∞–Ω–¥—ã. –ï—Å–ª–∏ –≤–æ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã, –∑–∞–¥–∞–π—Ç–µ –∏—Ö –Ω–∞–ø—Ä—è–º—É—é —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É (—Å—Å—ã–ª–∫—É –æ—Å—Ç–∞–≤–∏–ª–∏ –≤ –±–∏–æ –±–æ—Ç–∞)</i>',
        reply_markup=ReplyKeyboardRemove()
    )


#profile 
@connection
async def get_user(telegram_id: int, session: AsyncSession):
    statement = await session.execute(
        select(Users.added_at).where(Users.telegram_id == telegram_id)
        )
    result = statement.scalar_one_or_none()
    return result



@information_router.message(Command("profile"))
@information_router.message(F.text == "üë§ –ü—Ä–æ—Ñ–∏–ª—å")
@connection
async def cmd_profile(message: Message, state: FSMContext, session: AsyncSession):
    await state.clear()
    added_at = await get_user(message.from_user.id)
    added_at = added_at.strftime("%d.%m.%Y %H:%M")

    query = await session.execute(
        select(func.count(Entities.id)).join(Users).where(Users.telegram_id == message.from_user.id)
    )
    records = query.scalars().all()
    records_num = len(records)

    await message.answer(
        text=f"–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.full_name}:\n\n<b>üìÖ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ –±–æ—Ç–µ:</b> {added_at}\n<b>*Ô∏è‚É£ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π</b>: {records_num}"
    )


#menu
@information_router.message(Command('menu'))
async def cmd_menu(message: Message, state: FSMContext):
    await message.answer(
        text="–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –Ω–∏–∂–µ –∫–æ–º–∞–Ω–¥:",
        reply_markup=show_menu()
    )

